version: "3.1"
services:

  dev-fe-cron:
    container_name: dev-fe-cron
    environment:
      - CONFIG_ENV=dev
      - DB=true
    hostname: dev-fe-cron
    image: amrox/greencandle:${TAG}
    restart: always
    entrypoint: /docker-entrypoint.sh "cron -f"
    links:
      - dev-base-mysql:mysql
      - dev-base-redis-unit:redis
    depends_on:
      - dev-base-mysql
      - dev-base-redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws

  dev-base-redis:
    container_name: dev-base-redis
    hostname: dev-base-redis
    image: amrox/gc-redis:${TAG}
    ports:
      - 6379:6379
    restart: always
    links:
      - dev-base-mysql:mysql
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 10s
      retries: 5

  dev-base-mysql:
    container_name: dev-base-mysql
    hostname: dev-base-mysql
    image: amrox/gc-mysql:${TAG}
    ports:
      - 3306:3306
    entrypoint: /docker-entrypoint.sh mysqld
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - CONFIG_ENV=dev
      - DB=true
    restart: always
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 10s
      retries: 5

  dev-be-stream_1m:
    container_name: dev-be-stream_1m
    hostname: dev-be-stream_1m
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - dev-base-mysql:mysql
      - dev-base-redis:redis
    depends_on:
      - dev-base-mysql
      - dev-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=dev
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 120 -c 180 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      start_period: 1m
      interval: 1m
      timeout: 10s
      retries: 5
    ports:
      - 5001:5000
    volumes:
      - /mnt:/mnt
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run


  dev-be-get_1m:
    container_name: dev-be-get_1m
    hostname: dev-be-get_1m
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - dev-base-mysql:mysql
      - dev-base-redis:redis
      - dev-be-stream_1m:stream
    depends_on:
      - dev-base-mysql
      - dev-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=dev
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_1m.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run
