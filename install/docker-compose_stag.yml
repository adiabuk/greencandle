version: "3.1"
services:

  cadvisor:
    container_name: cadvisor
    hostname: cadvisor
    image: gcr.io/google_containers/cadvisor:v0.35.0
    restart: on-failure
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /dev/disk:/dev/disk
    healthcheck:
      test: "printf 'GET /healthz HTTP/1.1\r\nHost: localhost\r\n\r\n' | nc localhost 8080"
      interval: 1m
      timeout: 2s
      retries: 5

  redis:
    container_name: redis
    hostname: redis
    image: amrox/gc-redis:${TAG}
    restart: on-failure
    links:
      - mysql
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 2s
      retries: 5

  mysql:
    container_name: mysql
    hostname: mysql
    image: amrox/gc-mysql:${TAG}
    entrypoint: /docker-entrypoint.sh mysqld
    environment:
      - CONFIG_ENV=prod
      - MYSQL_ROOT_PASSWORD=password
    restart: on-failure
    ports:
      - 3306:3306
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 2s
      retries: 5

  api:
    container_name: api
    environment:
      - CONFIG_ENV=prod/cron
      - HOST=$HOSTNAME
    logging:
      driver: journald
    hostname: api
    image: amrox/greencandle:${TAG}
    restart: on-failure
    entrypoint: /docker-entrypoint-api.sh api --test
    links:
      - mysql:mysql
      - redis:redis
    ports:
      - 5000
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name api 2>&1 |grep -q api || exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  cron:
    container_name: cron
    environment:
      - CONFIG_ENV=prod/cron
      - HOST=$HOSTNAME
    hostname: cron
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh cron -f
    logging:
      driver: journald
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  webserver:
     container_name: webserver
     hostname: webserver
     image: amrox/webserver:${TAG}
     healthcheck:
       test: service nginx status || exit 1
       interval: 5m
       timeout: 5s
       retries: 5
     environment:
       - CONFIG_ENV=prod
       - HOST=$HOSTNAME
     ports:
       - 8888:8888
     links:
       - dashboard:dashboard
       - cadvisor:cadvisor
     entrypoint: /docker-entrypoint.sh nginx -g 'daemon off;'
     volumes:
       - /data:/data

  dashboard:
    container_name: dashboard
    hostname: dashboard
    image: amrox/dashboard:${TAG}
    ports:
      - 8080:3030
    healthcheck:
      test: curl --fail 127.1:3030/dashboard/gc || exit 1
      interval: 10m
      timeout: 5s
      retries: 5
    entrypoint: /run.sh
    links:
      - mysql:mysql

  2ma-eth:
    container_name: 2ma-eth
    hostname: 2ma-btc
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/2MA/ETH
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  2ma-usdt:
    container_name: 2ma-usdt
    hostname: 2ma-usdt
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/2MA/USDT
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  2ma-btc:
    container_name: 2ma-btc
    hostname: 2ma-btc
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/2MA/BTC
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  2ma-bnb:
    container_name: 2ma-bnb
    hostname: 2ma-bnb
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/2MA/BNB
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  4ma-usdt:
    container_name: 4ma-usdt
    hostname: 4ma-usdt
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/4MA/USDT
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  4ma-eth:
    container_name: 4ma-eth
    hostname: 4ma-btc
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/4MA/ETH
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  4ma-btc:
    container_name: 4ma-btc
    hostname: 4ma-btc
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/4MA/BTC
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
  4ma-bnb:
    container_name: 4ma-bnb
    hostname: 4ma-bnb
    image: amrox/greencandle:${TAG}
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    links:
      - mysql
    depends_on:
      - mysql
      - redis
    environment:
      - CONFIG_ENV=prod/4MA/BNB
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - ./test:/tmp
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
