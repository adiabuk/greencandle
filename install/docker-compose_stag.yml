version: "3.1"
services:

  fe-cadvisor:
    container_name: fe-cadvisor
    hostname: fe-cadvisor
    image: gcr.io/google_containers/cadvisor:v0.35.0
    restart: always
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /dev/disk:/dev/disk
    healthcheck:
      test: "printf 'GET /healthz HTTP/1.1\r\nHost: localhost\r\n\r\n' | nc localhost 8080"
      interval: 1m
      timeout: 2s
      retries: 5

  base-redis:
    container_name: base-redis
    hostname: base-redis
    image: amrox/gc-redis:${TAG}
    pull_policy: always
    restart: always
    links:
      - base-mysql:mysql
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  base-mysql:
    container_name: base-mysql
    hostname: base-mysql
    image: amrox/gc-mysql:${TAG}
    pull_policy: always
    entrypoint: /docker-entrypoint.sh mysqld
    environment:
      - CONFIG_ENV=stag
      - MYSQL_ROOT_PASSWORD=password
    restart: always
    ports:
      - 3306:3306
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  fe-api-dashboard:
    container_name: fe-api-dashboard
    hostname: fe-api-dashboard
    environment:
      - CONFIG_ENV=stag/fe/api
      - HOST=$HOSTNAME
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint-api.sh api_dashboard
    links:
      - base-mysql:mysql
      - base-redis:redis
      - be-api-router:router

    ports:
      - 5000
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: curl -Isf http://127.1:5000/healthcheck
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  fe-cron:
    container_name: fe-cron
    hostname: fe-cron
    environment:
      - CONFIG_ENV=stag/fe/cron
      - HOST=$HOSTNAME
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh cron -f
    logging:
      driver: journald
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  fe-webserver:
    container_name: fe-webserver
    hostname: fe-webserver
    image: amrox/webserver:${TAG}
    pull_policy: always
    restart: always
    healthcheck:
      test: service nginx status || exit 1
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=stag
      - HOST=$HOSTNAME
    ports:
      - 8888:8888
    links:
      - fe-cadvisor:cadvisor
      - fe-api-dashboard:api_dash
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - fe-cadvisor
      - base-mysql
      - base-redis
    entrypoint: /docker-entrypoint.sh nginx -g 'daemon off;'
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  fe-api-web:
    container_name: fe-api-web
    hostname: fe-api-web
    image: amrox/webserver:${TAG}
    pull_policy: always
    restart: always
    healthcheck:
      test: service nginx status || exit 1
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=stag/fe/api
      - HOST=$HOSTNAME
    ports:
      - 1111:1111
    links:
      - be-api-router:router
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    entrypoint: /docker-entrypoint-api2.sh nginx -g 'daemon off;'
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  be-api-router:
    container_name: be-api-router
    hostname: be-api-router
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf http://127.1:1080/healthcheck
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=stag
      - HOST=$HOSTNAME
    ports:
      - 1080
    links:
      - be-alert:alert
      - base-mysql:mysql
      - base-redis:redis
      - be-any:any
    depends_on:
      - be-alert
      - base-mysql
      - base-redis
      - be-any
    entrypoint: /docker-entrypoint.sh api_router --test
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  be-5ma-api-btc:
    container_name: be-5ma-api-btc
    hostname: be-5ma-api-btc
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh backend_api --test
    logging:
      driver: journald
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag/5MA/api/btc
    ports:
      - 20000
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  be-5ma-api-usdt:
    container_name: be-5ma-api-usdt
    hostname: be-5ma-api-usdt
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh backend_api --test
    logging:
      driver: journald
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag/5MA/api/usdt
    ports:
      - 20000
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  be-5ma-api-eth:
    container_name: be-5ma-api-eth
    hostname: be-5ma-api-eth
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh backend_api --test
    logging:
      driver: journald
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag/5MA/api/eth
    ports:
      - 20000
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  stag-be-bb-4h:
    container_name: stag-be-bb-4h
    hostname: stag-be-bb-4h
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh backend --test
    logging:
      driver: journald
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag/bb/4h
    ports:
      - 20000
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 4h
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  be-any:
    container_name: be-any
    hostname: be-any
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh backend_api --test
    logging:
      driver: journald
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag/any
    ports:
      - 20000
    links:
      - base-mysql:mysql
      - base-redis:redis
    depends_on:
      - base-mysql
      - base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.bash_history:/root/.bash_history

  be-alert:
    container_name: be-alert
    hostname: be-alert
    image: amrox/alert:latest
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint-alert.sh
    ports:
      - 20000
    healthcheck:
      test: ls || exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
      - /dev/snd:/dev/snd
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=stag
    volumes:
      - /root/.aws:/root/.aws
      - /run/dbus/:/run/dbus/
      - /dev/shm:/dev/shm
      - /run/user:/run/user
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /var/run/dbus:/var/run/dbu
      - /etc/localtime:/etc/localtime:ro
      - /root/.bash_history:/root/.bash_history
