version: "3.7"
services:

  ###### Start Gen
  prod-gen-be-logwatch:
    container_name: prod-gen-be-logwatch
    hostname: prod-gen-be-logwatch
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    restart: always
    entrypoint: /docker-entrypoint.sh /usr/local/bin/logwatch
    environment:
      - CONFIG_ENV=prod/fe/cron
      - DB=false
    volumes:
      - /var/log:/var/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
    healthcheck:
      test: ls /var/log/greencandle.log
      interval: 5m
      timeout: 10s
      retries: 5

  prod-gen-be-logtailer-api:
    container_name: prod-gen-be-logtailer-api
    hostname: prod-gen-be-logtailer-api
    image: amrox/greencandle:${TAG}
    mem_limit: 300m
    pull_policy: always
    restart: always
    environment:
      - CONFIG_ENV=prod
      - DB=false
      - SECRET_KEY=$SECRET_KEY
    entrypoint: /docker-entrypoint.sh logtailer
    logging:
      driver: journald
    ports:
      - 2000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    healthcheck:
      test: ls ||exit 1
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /var/log/greencandle.log:/var/log/greencandle.log
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  ###### Start Prod
  prod-base-redis:
    container_name: prod-base-redis
    hostname: prod-base-redis
    image: amrox/gc-redis:${TAG}
    mem_limit: 300m
    pull_policy: always
    restart: always
    links:
      - prod-base-mysql:mysql
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /var/run:/var/run
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  prod-base-mysql:
    container_name: prod-base-mysql
    hostname: prod-base-mysql
    image: amrox/gc-mysql:${TAG}
    mem_limit: 300m
    pull_policy: always
    entrypoint: /docker-entrypoint.sh "--max-connections=5000"
    environment:
      - CONFIG_ENV=prod/fe
      - MYSQL_ROOT_PASSWORD=password
      - DB=true
    restart: always
    ports:
      - 3306:3306
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  prod-be-manual:
    container_name: prod-be-manual
    hostname: prod-be-manual
    environment:
      - CONFIG_ENV=prod/be/manual
      - DB=true
      - STREAM=http://10.8.0.101:5001/all
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "tail -f /dev/null"
    logging:
      driver: journald
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
      - prod-be-api-router:router
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: ls || exit 1
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
      - /root/.ipython:/root/.ipython

  prod-fe-cron:
    container_name: prod-fe-cron
    hostname: prod-fe-cron
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=prod/fe/cron
      - DB=true
    image: amrox/greencandle:${TAG}
    mem_limit: 5g
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "cron -f"
    logging:
      driver: journald
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.bash_history:/root/.bash_history

  prod-fe-webserver:
    container_name: prod-fe-webserver
    hostname: prod-fe-webserver
    image: amrox/webserver:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf 127.1:1111
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=prod/fe
      - DB=false
    ports:
      - 1111:1111
    links:
      - prod-fe-api-dashboard:api_dash
      - prod-base-mysql:mysql
      - prod-base-redis:redis
      - prod-gen-be-logtailer-api:logs
      - prod-fe-api-proxy:proxy
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    entrypoint: /docker-entrypoint.sh "nginx -g 'daemon off;'"
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history
      - /var/run:/var/run
      - /var/local:/var/local

  prod-fe-api-proxy:
    container_name: prod-fe-api-proxy
    hostname: prod-fe-api-proxy
    environment:
      - CONFIG_ENV=prod/fe/api
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_proxy
    healthcheck:
      test: curl -qsf http://127.1:5000 >/dev/null
      interval: 5m
      timeout: 10s
      retries: 5
    links:
      - prod-be-api-router:router
      - prod-fe-api-filesystem:filesystem
    ports:
      - 5000
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  prod-fe-api-filesystem:
    container_name: prod-fe-api-filesystem
    hostname: prod-fe-api-filesystem
    environment:
      - CONFIG_ENV=prod/fe/api
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh filesystem_api
    healthcheck:
      test: curl -Isf http://127.1:6000
      interval: 5m
      timeout: 10s
      retries: 5
    ports:
      - 6000
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run

  prod-fe-api-dashboard:
    container_name: prod-fe-api-dashboard
    hostname: prod-fe-api-dashboard
    environment:
      - VPN_IP=$VPN_IP
      - STREAM=http://10.8.0.101:5001/all
      - CONFIG_ENV=prod/fe/api
      - DB=true
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_dashboard
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
      - prod-be-api-router:router
      - prod-fe-api-filesystem:filesystem
      - prod-fe-api-proxy:proxy
    ports:
      - 5000
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: curl -Isf http://127.1:5000/healthcheck
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  prod-be-api-router:
    container_name: prod-be-api-router
    hostname: prod-be-api-router
    extra_hosts:
      - "alert:172.31.15.59"
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf http://127.1:1080/healthcheck
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=prod/fe/api
      - DB=true
    ports:
      - 1080:1080
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
      - prod-be-api-any-1h-cross-long:any-1h-long
      - prod-be-api-any-1h-cross-short:any-1h-short
      - prod-be-api-any-1m-cross-long:any-1m-long
      - prod-be-api-any-1m-cross-short:any-1m-short
      - prod-be-api-any-5m-cross-long:any-5m-long
      - prod-be-api-any-5m-cross-short:any-5m-short
      - prod-be-api-any2-1h-cross-long:any2-1h-long
      - prod-be-api-any2-1h-cross-short:any2-1h-short
      - prod-be-api-any2-1m-cross-long:any2-1m-long
      - prod-be-api-any2-1m-cross-short:any2-1m-short
      - prod-be-api-any2-5m-cross-long:any2-5m-long
      - prod-be-api-any2-5m-cross-short:any2-5m-short

    depends_on:
      - prod-base-mysql
      - prod-base-redis
      - prod-be-api-any-1h-cross-long
      - prod-be-api-any-1h-cross-short
    entrypoint: /docker-entrypoint.sh api_router
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-1h-cross-long:
    container_name: prod-be-api-any-1h-cross-long
    hostname: prod-be-api-any-1h-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/1h/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-1h-cross-short:
    container_name: prod-be-api-any-1h-cross-short
    hostname: prod-be-api-any-1h-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/1h/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-1m-cross-long:
    container_name: prod-be-api-any-1m-cross-long
    hostname: prod-be-api-any-1m-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/1m/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-1m-cross-short:
    container_name: prod-be-api-any-1m-cross-short
    hostname: prod-be-api-any-1m-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/1m/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-5m-cross-long:
    container_name: prod-be-api-any-5m-cross-long
    hostname: prod-be-api-any-5m-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/5m/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any-5m-cross-short:
    container_name: prod-be-api-any-5m-cross-short
    hostname: prod-be-api-any-5m-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any/5m/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-1h-cross-long:
    container_name: prod-be-api-any2-1h-cross-long
    hostname: prod-be-api-any2-1h-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/1h/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-1h-cross-short:
    container_name: prod-be-api-any2-1h-cross-short
    hostname: prod-be-api-any2-1h-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/1h/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-1m-cross-long:
    container_name: prod-be-api-any2-1m-cross-long
    hostname: prod-be-api-any2-1m-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/1m/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-1m-cross-short:
    container_name: prod-be-api-any2-1m-cross-short
    hostname: prod-be-api-any2-1m-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/1m/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-5m-cross-long:
    container_name: prod-be-api-any2-5m-cross-long
    hostname: prod-be-api-any2-5m-cross-long
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/5m/cross-long
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  prod-be-api-any2-5m-cross-short:
    container_name: prod-be-api-any2-5m-cross-short
    hostname: prod-be-api-any2-5m-cross-short
    image: amrox/greencandle:${TAG}
    mem_limit: 400m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api api & backend_api queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - intermittent="true"
      - CONFIG_ENV=prod/be/any2/5m/cross-short
      - DB=true
    ports:
      - 20000
    links:
      - prod-base-mysql:mysql
      - prod-base-redis:redis
    depends_on:
      - prod-base-mysql
      - prod-base-redis
    healthcheck:
      test: api_healthcheck.sh || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 5m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history
