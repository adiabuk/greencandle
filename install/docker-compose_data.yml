version: "3.1"
services:

  gen-fe-data-cadvisor:
    container_name: gen-fe-data-cadvisor
    hostname: gen-fe-data-cadvisor
    image: gcr.io/google_containers/cadvisor:v0.35.0
    restart: always
    network_mode: "bridge"
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /dev/disk:/dev/disk
    healthcheck:
      test: "printf 'GET /healthz HTTP/1.1\r\nHost: localhost\r\n\r\n' | nc localhost 8080"
      interval: 1m
      timeout: 2s
      retries: 5

  gen-be-logwatch:
    container_name: gen-be-logwatch
    hostname: gen-be-logwatch
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh /usr/local/bin/logwatch
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/cron
      - HOST=$HOSTNAME
      - DB=false
    volumes:
      - /var/log:/var/log
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ls /var/log/syslog
      interval: 1m
      timeout: 2s
      retries: 5

  gen-be-logtailer-api:
    container_name: gen-be-logtailer-api
    hostname: gen-be-logtailer-api
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    environment:
      - CONFIG_ENV=data
      - DB=false
      - SECRET_KEY=$SECRET_KEY
    entrypoint: /docker-entrypoint.sh logtailer
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /var/log/syslog:/var/log/syslog
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  data-be-analyse_1h_bb-short:
    container_name:  data-be-analyse_1h_bb-short
    hostname: data-be-analyse_1h_bb-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - dat a-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-get_1h:data
    depends_on:
      - data-base-mysq l
      - data-base-redis
      - data-be-get_1h
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/short1
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse_1h_bb-long:
    container_name: data-be-analyse_1h_bb-long
    hostname: data-be-analyse_1h_bb-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-get_1h:data
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1h
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/long1
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      -  /var/run/:/var/run

  data-be-get_1h:
    container_name: data-be-get_1h
    hostname: data-be-get_1h
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/get_data
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse_1m_bb-short:
    container_name: data-be-analyse_1m_bb-short
    hostname: data-be-analyse_1m_bb-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-get_1m:data
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1m/short1
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse_1m_bb-long:
    container_name: data-be-analyse_1m_bb-long
    hostname: data-be-analyse_1m_bb-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-get_1m:data
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1m/long1
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      -  /var/run/:/var/run

  data-be-get_1m:
    container_name: data-be-get_1m
    hostname: data-be-get_1m
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1m/get_data
      - HOST=$HOSTNAME
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run


  data-be-manual:
    container_name: data-be-manual
    hostname: data-be-manual
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/manual
      - HOST=$HOSTNAME
      - DB=true
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh tail -f /dev/null
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: ls || exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
      - /root/.ipython:/root/.ipython

  data-fe-cron:
    container_name: data-fe-cron
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/cron
      - HOST=$HOSTNAME
      - DB=true
    hostname: data-fe-cron
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh cron -f
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: find /var/local/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws

  data-base-redis:
    container_name: data-base-redis
    hostname: data-base-redis
    image: amrox/gc-redis:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    ports:
      - 6382:6379
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    links:
      - data-base-mysql:mysql
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 2s
      retries: 5

  data-base-mysql:
    container_name: data-base-mysql
    hostname: data-base-mysql
    image: amrox/gc-mysql:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh mysqld
    ports:
      - 3309:3306
    environment:
      - VPN_IP=$VPN_IP
      - MYSQL_ROOT_PASSWORD=password
      - CONFIG_ENV=data
      - DB=true
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 2s
      retries: 5

  data-fe-webserver:
    container_name: data-fe-webserver
    hostname: data-fe-webserver
    image: amrox/webserver:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    healthcheck:
      test: service nginx status || exit 1
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data
      - HOST=$HOSTNAME
      - DB=false
    ports:
      - 7777:7777
    links:
      - data-fe-api-dashboard:api_dash
      - gen-fe-data-cadvisor:cadvisor
      - data-base-mysql:mysql
      - data-base-redis:redis
      - gen-be-logtailer-api:logs
      - data-fe-api-proxy:proxy
    depends_on:
      - data-base-mysql
      - data-base-redis
      - gen-fe-data-cadvisor
    entrypoint: /docker-entrypoint.sh nginx -g 'daemon off;'
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history
      - /var/run:/var/run

  data-fe-api-proxy:
    container_name: data-fe-api-proxy
    hostname: data-fe-api-proxy
    environment:
      - CONFIG_ENV=data
      - HOST=$HOSTNAME
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh api_proxy
    links:
      - data-be-api-router:router
      - data-fe-api-filesystem:filesystem
    ports:
      - 5000
    depends_on:
      - data-base-mysql
      - data-base-redis
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  data-be-api-router:
    container_name: data-be-api-router
    hostname: data-be-api-router
    extra_hosts:
      - "alert:10.8.0.104"
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    healthcheck:
      test: curl -Isf http://127.1:1080/healthcheck
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=data
      - HOST=$HOSTNAME
      - DB=true
    ports:
      - 1083:1080
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    entrypoint: /docker-entrypoint.sh api_router
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  data-fe-api-filesystem:
    container_name: data-fe-api-filesystem
    hostname: data-fe-api-filesystem
    environment:
      - CONFIG_ENV=data
      - HOST=$HOSTNAME
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh filesystem_api
    ports:
      - 6000
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run

  data-fe-api-dashboard:
    container_name: data-fe-api-dashboard
    hostname: data-fe-api-dashboard
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data
      - HOST=$HOSTNAME
      - DB=true
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    network_mode: "bridge"
    dns:
      - "8.8.8.8"
    entrypoint: /docker-entrypoint.sh api_dashboard
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-api-router:router
      - data-fe-api-filesystem:filesystem
      - data-fe-api-proxy:proxy
    ports:
      - 5000
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: curl -Isf http://127.1:5000/healthcheck
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
