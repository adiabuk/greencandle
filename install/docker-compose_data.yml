version: "3.1"
services:

  data-gen-be-logwatch:
    container_name: data-gen-be-logwatch
    hostname: data-gen-be-logwatch
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh /usr/local/bin/logwatch
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/cron
      - DB=false
    volumes:
      - /var/log:/var/log
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ls /var/log/syslog
      interval: 1m
      timeout: 10s
      retries: 5

  data-gen-be-logtailer-api:
    container_name: data-gen-be-logtailer-api
    hostname: data-gen-be-logtailer-api
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    environment:
      - CONFIG_ENV=data
      - DB=false
      - SECRET_KEY=$SECRET_KEY
    entrypoint: /docker-entrypoint.sh logtailer
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /var/log/syslog:/var/log/syslog
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  data-be-stream_1h:
    container_name: data-be-stream_1h
    hostname: data-be-stream_1h
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/get_data
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 3660 -c 3720 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      interval: 1m
      start_period: 1m
      timeout: 10s
      retries: 5
    ports:
      - 5003:5000
    volumes:
      - /mnt:/mnt
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_1h-btc:
    container_name: data-be-get_1h-btc
    hostname: data-be-get_1h-btc
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_1h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/get_data/btc
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_1h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_1h-usdt:
    container_name: data-be-get_1h-usdt
    hostname: data-be-get_1h-usdt
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_1h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1h/get_data/usdt
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_1h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1h-short:
    container_name: data-be-analyse-1h-short
    hostname: data-be-analyse-1h-short
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1h-btc
      - data-be-get_1h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1h/short1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1h-long:
    container_name: data-be-analyse-1h-long
    hostname: data-be-analyse-1h-long
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1h-btc
      - data-be-get_1h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1h/long1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-stream_12h:
    container_name: data-be-stream_12h
    hostname: data-be-stream_12h
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/12h/get_data
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 43500 -c 43560 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      start_period: 10m
      interval: 10m
      timeout: 30s
      retries: 5
    ports:
      - 5005:5000
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run
      - /mnt:/mnt

  data-be-get_12h-btc:
    container_name: data-be-get_12h-btc
    hostname: data-be-get_12h-btc
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_12h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/12h/get_data/btc
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_12h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_12h-usdt:
    container_name: data-be-get_12h-usdt
    hostname: data-be-get_12h-usdt
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_12h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/12h/get_data/usdt
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_12h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-12h-short:
    container_name: data-be-analyse-12h-short
    hostname: data-be-analyse-12h-short
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_12h-btc
      - data-be-get_12h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/12h/short1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -15 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 30m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-12h-long:
    container_name: data-be-analyse-12h-long
    hostname: data-be-analyse-12h-long
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_12h-btc
      - data-be-get_12h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/12h/long1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -15 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 30m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-stream_4h:
    container_name: data-be-stream_4h
    hostname: data-be-stream_4h
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/4h/get_data
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 14400 -c 14460 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      start_period: 5m
      interval: 5m
      timeout: 30s
      retries: 5
    ports:
      - 5004:5000
    volumes:
      - /mnt:/mnt
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_4h-btc:
    container_name: data-be-get_4h-btc
    hostname: data-be-get_4h-btc
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_4h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/4h/get_data/btc
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_4h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_4h-usdt:
    container_name: data-be-get_4h-usdt
    hostname: data-be-get_4h-usdt
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_4h:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/4h/get_data/usdt
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_4h.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-4h-short:
    container_name: data-be-analyse-4h-short
    hostname: data-be-analyse-4h-short
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_4h-btc
      - data-be-get_4h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/4h/short1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -15 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 30m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-4h-long:
    container_name: data-be-analyse-4h-long
    hostname: data-be-analyse-4h-long
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_4h-btc
      - data-be-get_4h-usdt
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/4h/long1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -15 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 30m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-stream_1m:
    container_name: data-be-stream_1m
    hostname: data-be-stream_1m
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1m/get_data
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 120 -c 180 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      start_period: 1m
      interval: 1m
      timeout: 10s
      retries: 5
    ports:
      - 5001:5000
    volumes:
      - /mnt:/mnt
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_1m:
    container_name: data-be-get_1m
    hostname: data-be-get_1m
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_1m:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/1m/get_data
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_1m.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-short:
    container_name: data-be-analyse-1m-short
    hostname: data-be-analyse-1m-short
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/short1
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-long:
    container_name: data-be-analyse-1m-long
    hostname: data-be-analyse-1m-long
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/long1
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-short2:
    container_name: data-be-analyse-1m-short2
    hostname: data-be-analyse-1m-short2
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/short2
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-long2:
    container_name: data-be-analyse-1m-long2
    hostname: data-be-analyse-1m-long2
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/long2
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-short3:
    container_name: data-be-analyse-1m-short3
    hostname: data-be-analyse-1m-short3
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/short3
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-1m-long3:
    container_name: data-be-analyse-1m-long3
    hostname: data-be-analyse-1m-long3
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_1m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/1m/long3
      - DB=true
      - STORE_IN_DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-stream_5m:
    container_name: data-be-stream_5m
    hostname: data-be-stream_5m
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh stream_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/5m/get_data
      - DB=true
    healthcheck:
      test: /mnt/nagios_checks/check_milliepoch -u http://127.1:5000 -w 360 -c 420 || bash -c 'kill -s 15 -1 && (sleep 10; kill -s 9 -1)'
      start_period: 1m
      interval: 1m
      timeout: 10s
      retries: 5
    ports:
      - 5002:5000
    volumes:
      - /mnt:/mnt
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-get_5m:
    container_name: data-be-get_5m
    hostname: data-be-get_5m
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-stream_5m:stream
    depends_on:
      - data-base-mysql
      - data-base-redis
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/5m/get_data
      - DB=true
    healthcheck:
      test: find /var/local/gc_get_5m.lock  -mmin -2 ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /var/local:/var/local
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-5m-short:
    container_name: data-be-analyse-5m-short
    hostname: data-be-analyse-5m-short
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_5m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/5m/short1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-analyse-5m-long:
    container_name: data-be-analyse-5m-long
    hostname: data-be-analyse-5m-long
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "analyse_data forward"
    logging:
      driver: journald
    links:
      - data-be-api-router:router
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
      - data-be-get_5m
    environment:
      - VPN_IP=$VPN_IP
      - ALERT="True"
      - CONFIG_ENV=data/5m/long1
      - DB=true
    healthcheck:
      test: find /var/local/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      start_period: 1h
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/:/var/run

  data-be-manual:
    container_name: data-be-manual
    hostname: data-be-manual
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/manual
      - DB=true
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "tail -f /dev/null"
    logging:
      driver: journald
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-api-router:router
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: ls || exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
      - /root/.ipython:/root/.ipython

  data-fe-cron:
    container_name: data-fe-cron
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data/cron
      - DB=true
    hostname: data-fe-cron
    image: amrox/greencandle:${TAG}
    mem_limit: 500m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "cron -f"
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-api-router:router
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws

  data-base-redis:
    container_name: data-base-redis
    hostname: data-base-redis
    image: amrox/gc-redis:${TAG}
    mem_limit: 300m
    pull_policy: always
    restart: always
    ports:
      - 6382:6379
    links:
      - data-base-mysql:mysql
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 10s
      retries: 5

  data-base-mysql:
    container_name: data-base-mysql
    hostname: data-base-mysql
    image: amrox/gc-mysql:${TAG}
    mem_limit: 300m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "--max-connections=10000"
    ports:
      - 3309:3306
    environment:
      - VPN_IP=$VPN_IP
      - MYSQL_ROOT_PASSWORD=password
      - CONFIG_ENV=data
      - DB=true
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 10s
      retries: 5

  data-fe-webserver:
    container_name: data-fe-webserver
    hostname: data-fe-webserver
    image: amrox/webserver:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf 127.1:6666
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data
      - DB=false
    ports:
      - 6666:6666
    links:
      - data-fe-api-dashboard:api_dash
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-gen-be-logtailer-api:logs
      - data-fe-api-proxy:proxy
    depends_on:
      - data-base-mysql
      - data-base-redis
    entrypoint: /docker-entrypoint.sh "nginx -g 'daemon off;'"
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history
      - /var/run:/var/run

  data-fe-api-proxy:
    container_name: data-fe-api-proxy
    hostname: data-fe-api-proxy
    environment:
      - CONFIG_ENV=data
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_proxy
    links:
      - data-be-api-router:router
      - data-fe-api-filesystem:filesystem
    ports:
      - 5000
    depends_on:
      - data-base-mysql
      - data-base-redis
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  data-be-api-router:
    container_name: data-be-api-router
    hostname: data-be-api-router
    extra_hosts:
      - "alert:10.8.0.104"
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf http://127.1:1080/healthcheck
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=data
      - DB=true
    ports:
      - 1083:1080
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
    depends_on:
      - data-base-mysql
      - data-base-redis
    entrypoint: /docker-entrypoint.sh api_router
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  data-fe-api-filesystem:
    container_name: data-fe-api-filesystem
    hostname: data-fe-api-filesystem
    environment:
      - CONFIG_ENV=data
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh filesystem_api
    ports:
      - 6000
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run

  data-fe-api-dashboard:
    container_name: data-fe-api-dashboard
    hostname: data-fe-api-dashboard
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=data
      - DB=true
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    mem_limit: 200m
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_dashboard
    links:
      - data-base-mysql:mysql
      - data-base-redis:redis
      - data-be-api-router:router
      - data-fe-api-filesystem:filesystem
      - data-fe-api-proxy:proxy
    ports:
      - 5000
    depends_on:
      - data-base-mysql
      - data-base-redis
    healthcheck:
      test: curl -Isf http://127.1:5000/healthcheck
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
