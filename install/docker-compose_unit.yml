version: "3.1"
services:

  cron:
    container_name: cron-${id}
    build:
      context: ..
      dockerfile: install/Dockerfile-gc
    environment:
      - CONFIG_ENV=unit
      - DB=true
      - id=$id
    hostname: cron
    image: greencandle-${image_id}
    restart: always
    entrypoint: bash -c "cd /srv/greencandle;configstore package process_templates unit /opt/output; cp /opt/output/greencandle.ini /etc;crontab /opt/output/gc-cron;cron -f"
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws

  api:
    container_name: api-${id}
    build:
      context: ..
      dockerfile: install/Dockerfile-gc
    environment:
      - CONFIG_ENV=unit
      - DB=true
      - id=$id
    hostname: api
    image: greencandle-${image_id}
    restart: always
    entrypoint: bash -c "cd /srv/greencandle;configstore package process_templates unit /etc;backend_api --test api"
    ports:
      - 20000
    healthcheck:
      test: nc -z 127.1 20000 || exit 1
      interval: 10
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data

  redis-unit:
    build:
      context: ..
      dockerfile: install/Dockerfile-rs
    container_name: redis-unit-${id}
    tmpfs:
      - /srv
      - /data
    environment:
      - id=$id
    hostname: redis-unit
    image: gc-redis-${image_id}
    entrypoint: sh -c "rm -f /data/dump.rdb && redis-server"
    ports:
      - 6379
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 10s
      retries: 5

  mysql-unit:
    build:
      context: ..
      dockerfile: install/Dockerfile-ms
    container_name: mysql-unit-${id}
    tmpfs:
      - /srv
      - /var/lib/mysql
    hostname: mysql-unit
    image: gc-mysql-${image_id}
    ports:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - CONFIG_ENV=unit
      - DB=true
      - id=$id
    entrypoint: /docker-entrypoint.sh mysqld
    restart: always
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 10s
      timeout: 10s
      retries: 10
