version: "3.1"
services:

  gen-fe-cadvisor:
    container_name: gen-fe-cadvisor
    hostname: gen-fe-cadvisor
    image: gcr.io/google_containers/cadvisor:v0.35.0
    restart: always
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /dev/disk:/dev/disk
    healthcheck:
      test: "printf 'GET /healthz HTTP/1.1\r\nHost: localhost\r\n\r\n' | nc localhost 8080"
      interval: 1m
      timeout: 10s
      retries: 5

  test-gen-be-logwatch:
    container_name: test-gen-be-logwatch
    hostname: test-gen-be-logwatch
    image: amrox/greencandle:${TAG}
    restart: always
    entrypoint: /docker-entrypoint.sh /usr/local/bin/logwatch
    environment:
      - CONFIG_ENV=test/fe/cron
      - DB=false
    volumes:
      - /var/log:/var/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
    healthcheck:
      test: ls /var/log/syslog
      interval: 1m
      timeout: 10s
      retries: 5

  test-gen-be-logtailer-api:
    container_name: test-gen-be-logtailer-api
    hostname: test-gen-be-logtailer-api
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    environment:
      - CONFIG_ENV=test
      - DB=false
      - SECRET_KEY=$SECRET_KEY
    entrypoint: /docker-entrypoint.sh logtailer
    logging:
      driver: journald
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /var/log/syslog:/var/log/syslog
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  test-base-redis:
    container_name: test-base-redis
    hostname: test-base-redis
    image: amrox/gc-redis:${TAG}
    pull_policy: always
    restart: always
    links:
      - test-base-mysql:mysql
    ports:
      - 6383:6379
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /var/run:/var/run
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  test-base-mysql:
    container_name: test-base-mysql
    hostname: test-base-mysql
    image: amrox/gc-mysql:${TAG}
    entrypoint: /docker-entrypoint.sh mysqld
    pull_policy: always
    environment:
      - CONFIG_ENV=test
      - MYSQL_ROOT_PASSWORD=password
      - DB=true
    restart: always
    ports:
      - 3310:3306
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history

  test-fe-api-filesystem:
    container_name: test-fe-api-filesystem
    hostname: test-fe-api-filesystem
    environment:
      - CONFIG_ENV=test/fe/api
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh filesystem_api
    ports:
      - 6000
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run

  test-fe-api-dashboard:
    container_name: test-fe-api-dashboard
    hostname: test-fe-api-dashboard
    environment:
      - HOST=$HOSTNAME
      - CONFIG_ENV=test/fe/api
      - DB=true
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_dashboard
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
      - test-be-api-router:router
      - test-fe-api-filesystem:filesystem
      - test-fe-api-proxy:proxy
    ports:
      - 5000
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: curl -Isf http://127.1:5000/healthcheck
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  test-fe-api-proxy:
    container_name: test-fe-api-proxy
    hostname: test-fe-api-proxy
    environment:
      - CONFIG_ENV=test/fe/api
      - SECRET_KEY=$SECRET_KEY
    logging:
      driver: journald
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh api_proxy
    links:
      - test-be-api-router:router
      - test-fe-api-filesystem:filesystem
    ports:
      - 5000
    depends_on:
      - test-base-mysql
      - test-base-redis
    volumes:
      - /data:/data
      - /dev/log:/dev/log
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history

  test-be-manual:
    container_name: test-be-manual
    hostname: test-be-manual
    environment:
      - CONFIG_ENV=test/be/manual
      - DB=true
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "tail -f /dev/null"
    logging:
      driver: journald
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
      - test-be-api-router:router
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls || exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /root/.bash_history:/root/.bash_history
      - /root/.ipython:/root/.ipython

  test-fe-cron:
    container_name: test-fe-cron
    hostname: test-fe-cron
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/fe/cron
      - DB=true
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "cron -f"
    logging:
      driver: journald
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.bash_history:/root/.bash_history

  test-fe-webserver:
    container_name: test-fe-webserver
    hostname: test-fe-webserver
    image: amrox/webserver:${TAG}
    pull_policy: always
    restart: always
    healthcheck:
      test: curl -Isf 127.1:5555
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=test
      - DB=false
    ports:
      - 5555:5555
    links:
      - gen-fe-cadvisor:cadvisor
      - test-fe-api-dashboard:api_dash
      - test-gen-be-logtailer-api:logs
      - test-base-mysql:mysql
      - test-base-redis:redis
      - test-fe-api-filesystem:filesystem
    depends_on:
      - gen-fe-cadvisor
      - test-base-mysql
      - test-base-redis
    entrypoint: /docker-entrypoint.sh "nginx -g 'daemon off;'"
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /root/.bash_history:/root/.bash_history
      - /var/run:/var/run
      - /var/local:/var/local

  test-be-api-router:
    container_name: test-be-api-router
    hostname: test-be-api-router
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    extra_hosts:
      - "alert:172.31.15.59"
    healthcheck:
      test: curl -Isf http://127.1:1080/healthcheck
      interval: 5m
      timeout: 5s
      retries: 5
    environment:
      - CONFIG_ENV=test
      - DB=true
    ports:
      - 1084:1080
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
      - test-be-api-any-cross-long:any-long
      - test-be-api-any-cross-short:any-short
      - test-be-api-any2-1m-cross-long:any2-1m-long
      - test-be-api-any2-1m-cross-short:any2-1m-short
      - test-be-api-any2-1h-cross-long:any2-1h-long
      - test-be-api-any2-1h-cross-short:any2-1h-short
      - test-be-api-any-spot-long:any-spot-long
      - test-be-api-bb-cross-long:bb-long
      - test-be-api-bb-cross-short:bb-short
    depends_on:
      - test-base-mysql
      - test-base-redis
    entrypoint: /docker-entrypoint.sh "api_router backend_api --test api & backend_api --test queue"
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any2-1h-cross-long:
    container_name: test-be-api-any2-1h-cross-long
    hostname: test-be-api-any2-1h-cross-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/long/2/1h
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1h
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any2-1h-cross-short:
    container_name: test-be-api-any2-1h-cross-short
    hostname: test-be-api-any2-1h-cross-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/short/2/1h
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1h
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any2-1m-cross-long:
    container_name: test-be-api-any2-1m-cross-long
    hostname: test-be-api-any2-1m-cross-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/long/2/1m
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any2-1m-cross-short:
    container_name: test-be-api-any2-1m-cross-short
    hostname: test-be-api-any2-1m-cross-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/short/2/1m
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any-spot-long:
    container_name: test-be-api-any-spot-long
    hostname: test-be-api-any-spot-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/spot
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any-cross-long:
    container_name: test-be-api-any-cross-long
    hostname: test-be-api-any-cross-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/long
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-any-cross-short:
    container_name: test-be-api-any-cross-short
    hostname: test-be-api-any-cross-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/any/short
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-bb-cross-long:
    container_name: test-be-api-bb-cross-long
    hostname: test-be-api-bb-cross-long
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/bbperc/long
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history

  test-be-api-bb-cross-short:
    container_name: test-be-api-bb-cross-short
    hostname: test-be-api-bb-cross-short
    image: amrox/greencandle:${TAG}
    pull_policy: always
    restart: always
    entrypoint: /docker-entrypoint.sh "backend_api --test api & backend_api --test queue"
    logging:
      driver: journald
    environment:
      - VPN_IP=$VPN_IP
      - CONFIG_ENV=test/be/bbperc/short
      - ALERT="True"
      - intermittent="true"
      - DB=true
      - http_proxy=http://172.17.0.1:8082
      - https_proxy=http://172.17.0.1:8082
    extra_hosts:
      - "trend:10.8.0.101"
    ports:
      - 20000
    links:
      - test-base-mysql:mysql
      - test-base-redis:redis
    depends_on:
      - test-base-mysql
      - test-base-redis
    healthcheck:
      test: ls ||exit 1
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run:/var/run
      - /var/local:/var/local
      - /root/.bash_history:/root/.bash_history
