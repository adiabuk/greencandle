version: "3.1"
services:

  cadvisor:
    container_name: cadvisor
    hostname: cadvisor
    image: gcr.io/google_containers/cadvisor:v0.35.0
    restart: always
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /dev/disk:/dev/disk

  be-get_data_4h_low-rsi:
    container_name: be-get_data_4h_low-rsi
    hostname: be-get_data_4h_low-rsi
    image: amrox/greencandle
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    depends_on:
      - base-mysql-local
      - base-redis-local
    environment:
      - CONFIG_ENV=test/data/long1
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  be-get_data_4h_very-low-rsi:
    container_name: be-get_data_4h_very-low-rsi
    hostname: be-get_data_4h_very-low-rsi
    image: amrox/greencandle
    entrypoint: /docker-entrypoint.sh get_data
    logging:
      driver: journald
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    depends_on:
      - base-mysql-local
      - base-redis-local
    environment:
      - CONFIG_ENV=test/data/long2
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  be-analyse_data_4h:
    container_name: be-analyse_data_4h
    hostname: be-analyse_data_4h
    image: amrox/greencandle
    entrypoint: /docker-entrypoint.sh analyse_data
    logging:
      driver: journald
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    depends_on:
      - base-mysql-local
      - base-redis-local
    environment:
      - CONFIG_ENV=test/data/long1
      - HOST=$HOSTNAME
    healthcheck:
      test: find /var/run/  -mmin -2 -name greencandle 2>&1 |grep -q greencandle ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws
      - /dev/log:/dev/log
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket

  fe-cron:
    container_name: fe-cron
    environment:
      - CONFIG_ENV=test/cron
      - HOST=$HOSTNAME
    hostname: fe-cron
    image: amrox/greencandle
    restart: always
    entrypoint: /docker-entrypoint.sh cron -f
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    depends_on:
      - base-mysql-local
      - base-redis-local
    healthcheck:
      test: find /var/run/  -mmin -2 -name cron 2>&1 |grep -q cron ||exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data
      - /root/.aws:/root/.aws

  fe-api:
    container_name: fe-api
    environment:
      - CONFIG_ENV=test
      - HOST=$HOSTNAME
    hostname: fe-api
    image: amrox/greencandle
    restart: always
    entrypoint: /docker-entrypoint-api.sh api --test
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    ports:
      - 5000:5000
    depends_on:
      - base-mysql-local
      - base-redis-local
    healthcheck:
      test: find /var/run/  -mmin -2 -name api 2>&1 |grep -q api || exit 1
      interval: 1m
      timeout: 2s
      retries: 5
    volumes:
      - /data:/data

  fe-webserver:
     container_name: fe-webserver
     hostname: fe-webserver
     image: amrox/webserver
     entrypoint: /docker-entrypoint.sh nginx -g 'daemon off;'
     healthcheck:
       test: service nginx status || exit 1
       interval: 1m
       timeout: 1s
       retries: 5
     environment:
       - CONFIG_ENV=test
       - HOST=$HOSTNAME
     ports:
       - 7777:7777
     links:
       - base-mysql-local:mysql
       - base-redis-local:redis
       - fe-dashboard:dashboard
       - fe-api
     restart: always
     volumes:
       - /data:/data
       - /root/.aws:/root/.aws
     depends_on:
      - cadvisor
      - fe-api
      - fe-dashboard

  fe-dashboard:
    container_name: fe-dashboard
    hostname: fe-dashboard
    image: amrox/dashboard
    healthcheck:
      test: curl --fail 127.1:3030/dashboard/gc || exit 1
      interval: 1m
      timeout: 5s
      retries: 5
    ports:
      - 3030:3030
    restart: always
    entrypoint: /docker-entrypoint.sh
    links:
      - base-mysql-local:mysql
      - base-redis-local:redis
    volumes:
      - /srv/greencandle/dashboard/dashboards:/dashboards
      - /srv/greencandle/dashboard/jobs:/jobs
      - /srv/greencandle/dashboard/widgets:/widgets
      - /srv/greencandle/dashboard/config:/config
      - /srv/greencandle/dashboard/assets:/assets

  base-redis-local:
    container_name: base-redis-local
    hostname: base-redis-local
    image: amrox/gc-redis
    ports:
      - 6379:6379
    restart: always
    links:
      - base-mysql-local:mysql
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 2s
      retries: 5

  base-mysql-local:
    container_name: base-mysql-local
    hostname: base-mysql-local
    image: amrox/gc-mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - CONFIG_ENV=test
    restart: always
    healthcheck:
      test: echo 'SELECT version();'| mysql -uroot -ppassword
      interval: 1m
      timeout: 2s
      retries: 5
